original_method.js

getById(id)
・説明
document.getElecmentById(id)の短縮形
"id"でDOMを検索する
その要素を返す
・引数
"id".文字列

getByClass(cls)
・説明
document.getElementsByClassName(cls)の短縮形
"cls"でDOMを検索する
その要素を返す
・引数
"cls".文字列

getByTag(cls)
・説明
document.getElementsByTagName(tag)の短縮形
"tag"でDOMを検索する
その要素を返す
・引数
"tag".文字列

creEle(tag)
・説明
document.createElement(tag)の短縮形
"tag"のHTMLタグを作成する
その要素を返す
・引数
"tag".文字列

parentDom(dom)
・説明
"dom".parentElementの短縮形
"dom"の親を取得する
その要素を返す
・引数
"dom".HTML object

pareSp(dom)
・説明
"dom"の親のidを”_”で分割
その値を返す
・引数
"dom".HTML object

nodeSp(dom)
・説明
"dom"のidを”_”で分割
その値を返す
・引数
"dom".HTML object

nodeSpCls(dom)
・説明
"dom"のclassを”_”で分割
その値を返す
・引数
"dom".HTML object

parent_class_search(dom, class_name)
・説明
そのタグ含む"dom"の親に"class_name"のクラスがあるか検索
ある場合はその要素を返す
ない場合はnullを返す
・引数
"dom".HTML object
"class_name".文字列

parent_tag_search(dom, tag_name)
・説明
そのタグ含む"dom"親に"tag_name"のタグがあるか検索
ある場合はその要素を返す
ない場合はnullを返す
・引数
"dom".HTML object
"tag_name".文字列

getIdNum(dom, num)
・説明
"dom"のIDにある番号を取得、指定は0から、指定がないときはidの最後の番号
その値を返す
・引数
"dom".HTML object
"num".数値

getClsNum(dom, num)
・説明
"dom"のclassにある番号を取得、指定は0から、指定がないときはclassの最後の番号
その値を返す
・引数
"dom".HTML object
"num".数値

log(str)
・説明
console.logの短縮
・引数
"str".文字列

get_cell(z, y, x)
・説明
テーブルDOMの"z","y","x"座標の要素を返す
・引数
"z,y,x".数値

update_cell(arr)
・説明
"arr[z,y,x]"座標のセルの要素を更新する。
・引数
"arr".配列[z,y,x]
"a,y,x".数値

set_cell_dom(dom)
・説明
"dom"指定したセルの要素を変更する。
・引数
"dom".HTML object

get_lesson_status(z, num)
・説明
授業配列から学年"z"と授業番号"num"を指定取得する
numが100以上の時は選択授業を取得
その値を返す
"num"が100以上の時は選択授業
・引数
"z,num".数値

get_lesson_contents(z, num)
・説明
授業配列から学年"z"と授業番号"num"を指定取得する
numが100以上の時は選択授業を取得
その値を返す
"num"が100以上の時は選択授業
・引数
"z,num".数値

get_td_coordinate(dom)
・説明
"dom"の親のtdタグのクラスから数値を取得
その値を返す
・引数
"dom".HTML object

dlt_use_functon()
・説明
何か配列から消すときに関数の最後に使用する

update_specific_timetable(num)
・説明
特定の授業の時だけ時間割テーブルを時間割配列の値で上書きする
・引数
"num".数値

update_timetable()
・説明
時間割テーブルを時間割配列の値で上書きする

deleat_timetable(cls, num)
・説明
"cls"クラスの"num"授業番号を0にする（授業の削除を行う）
・引数
"cls, num".数値

rewrite_list_id(target_id, start_num)
・説明
"target_id"のlistのid番号を"start_num"から振りなおす
・引数
"target_id, start_num".数値

z_color_chenge(x, y)
・説明
タイムテーブルの同時間帯に被りがあるとき文字の色を赤にする
・引数
"x,y".数値

all_color_change()
・説明
タイムテーブルのすべてを検索して同時間帯に被りがあるとき文字の色を赤にする

check_timetable(sx, sy, sz)
・説明
"sx,sy,sz"で指定した同時間帯のタイムテーブルの被りを調べる
・引数
"sx, sy, sz".数値

comparison_lesson(cls1, lsn_num1, cls2, lsn_num2)
・説明
学年"cls1"の授業"lsn_num1"と学年"cls2"の授業"lsn_num2"の授業を比較する
同じ値の場合その項目はtrueを返す
・引数
"cls1, lsn_num1, cls2, lsn_num2".数値


--------------------------------------------------------------------
init.js

cell_click_event(e)
説明

引数
・"e"はdom
lesson_clear_btn(e)
class_change_btn(e)
teacher_change_btn(e)
room_change_btn(e)
lesson_change_btn(e)
get_lesson_num_btn(e)
update_lesson_list(par)
update_lesson_list_all()
init_add_event(val, list, arr, change_event_name, deleat_event_name)
lesson_list_add_event(val)
normal_lesson_add_event(val, parent)
class_add_btn()
teacher_add_btn()
room_add_btn()
normal_lesson_add_btn(e)
elective_lesson_list_add_btn(e)
elective_lesson_add_btn(e)
elective_lesson_list_add_event(val, parent)
elective_lesson_add_event(val1, val2, parent)
table_create()
selector_create(list)
select_add(select_class_name, add_opt)
select_del(select_class_name, del_suffix)
class_deleat_btn(e)
teacher_deleat_btn(e)
room_deleat_btn(e)
normal_lesson_deleat_btn(e)
elective_lesson_list_deleat_btn(e)
elective_lesson_deleat_btn(e)
init_deleat_event(btn, arr)
lesson_deleat_event(btn, arr, suf, cls_num)
class_deleat_event(btn)
rewrite_table_id()
